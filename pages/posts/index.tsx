import fs from "fs"
import path from "path";
import matter from 'gray-matter'
import {FC} from "react";
import Link from "next/link";


type Post = {
    content: string
    data: { [p: string]: any }
    filePath: string
}

type PostPageProps = {
    posts: Post[]
}

const PostsPage: FC<PostPageProps> = ({posts}) => {
    return (
        <>
            <h1>Home Page</h1>
            <p>
                Click the link below to navigate to a page generated by{' '}
            </p>
            <ul>
                {posts.map((post) => (
                    <li key={post.filePath}>
                        <Link as={`/posts/${post.filePath.replace(/\.mdx?$/, '')}`} href={`/posts/[slug]`}>
                            <a>{post.data.title}</a>
                        </Link>
                    </li>
                ))}
            </ul>
        </>
    )
}

export default PostsPage


// Why do I need a getStaticProps here ? (because it needs to be executed server side
export function getStaticProps() {
    const POSTS_PATH = path.join(process.cwd(), "posts")
    const filesPath = fs.readdirSync(POSTS_PATH).filter((path) => /\.mdx?$/.test(path))

    const posts: Post[] = filesPath.map((filePath) => {
        const source = fs.readFileSync(path.join(POSTS_PATH, filePath))
        const {content, data} = matter(source)

        return {
            content,
            data,
            filePath,
        }
    })

    return {props: {posts}}
}
